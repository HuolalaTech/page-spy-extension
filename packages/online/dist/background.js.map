{"version":3,"file":"background.js","sources":["../src/background.ts"],"sourcesContent":["const src = chrome.runtime.getURL('sdk/index.min.js');\nconst dataHarborSrc = chrome.runtime.getURL('sdk/plugins/data-harbor.min.js');\nconst rrwebSrc = chrome.runtime.getURL('sdk/plugins/rrweb.min.js');\nconst pluginSrcs = [dataHarborSrc, rrwebSrc];\n\nchrome.webNavigation.onCompleted.addListener((details) => {\n  // 如果关键配置变更：删除缓存、刷新后应用新配置\n  chrome.runtime.onMessage.addListener((msg) => {\n    if (msg === 'remove-cache') {\n      chrome.scripting.executeScript({\n        target: {\n          tabId: details.tabId\n        },\n        func: () => {\n          sessionStorage.setItem('page-spy-room', JSON.stringify({ usable: false }));\n        }\n      });\n    }\n  });\n  chrome.storage.local.get('pagespy', function (result: { pagespy: I.FormFields }) {\n    // 当前页面 URL\n    const currentUrl = details.url;\n    if (!result.pagespy) return;\n    const { rules, open, ...config } = result.pagespy;\n    if (open !== 'on' || !rules) return;\n    const ruleReg = rules.split('\\n').map((i) => new RegExp(i));\n    const isMatched = ruleReg.some((i) => i.test(currentUrl));\n    if (isMatched) {\n      chrome.action.setBadgeBackgroundColor({\n        color: '#17ae49'\n      });\n      chrome.action.setBadgeText({\n        tabId: details.tabId,\n        text: 'on'\n      });\n      chrome.action.setBadgeTextColor({\n        color: 'white'\n      });\n      chrome.scripting.executeScript({\n        target: { tabId: details.tabId },\n        world: 'MAIN',\n        func: (src: string, config: I.FormFields, pluginSrcs: string[]) => {\n          const { dataHarborOpen, rrwebOpen } = config as I.FormFields;\n          const isDataHarborOpen = dataHarborOpen === 'on';\n          const isRrwebOpen = rrwebOpen === 'on';\n          function createScript(src: string, successCb: (s: HTMLScriptElement) => void, errorCb: (e: Event | string) => void) {\n            return new Promise((resolve, reject) => {\n              const script = document.createElement('script');\n              script.src = src;\n              script.crossOrigin = 'anonymous';\n              script.onload = () => {\n                successCb(script);\n                resolve(script);\n              };\n              script.onerror = (e) => {\n                errorCb(e);\n                reject(new Error('Failed to load script' + src));\n              };\n              document.head.appendChild(script);\n            });\n          }\n          const dataHarborScript = {\n            src: pluginSrcs[0],\n            successCb: () => {\n              console.log('[PageSpy DataHarborPlugin] 加载成功');\n            },\n            errorCb: (e: Event | string) => {\n              console.warn('[PageSpy DataHarborPlugin] 加载失败: ', e);\n            }\n          };\n          const rrwebScript = {\n            src: pluginSrcs[1],\n            successCb: () => {\n              console.log('[PageSpy RRWebPlugin] 加载成功');\n            },\n            errorCb: (e: Event | string) => {\n              console.warn('[PageSpy RRWebPlugin] 加载失败: ', e);\n            }\n          };\n          const scriptList = [];\n          if (isRrwebOpen) {\n            scriptList.push(rrwebScript);\n          }\n          if (isDataHarborOpen) {\n            scriptList.push(dataHarborScript);\n          }\n          Promise.all(scriptList.map((i) => createScript(i.src, i.successCb, i.errorCb)))\n            .then(() => {\n              createScript(\n                src,\n                (script) => {\n                  console.log('[PageSpy Extension] 加载成功');\n                  const { ssl, offline, api, clientOrigin, project, title, autoRender, dataHarborMaximum, dataHarborCaredData } = config;\n                  const deployUrl = config['deploy-url'];\n                  const enableSSL = ssl === 'on';\n                  const isOffline = offline === 'on';\n                  const userCfg = {\n                    api: '',\n                    offline: isOffline,\n                    clientOrigin: '',\n                    project: project || 'default',\n                    title: title || '--',\n                    autoRender: autoRender === 'on',\n                    enableSSL\n                  };\n                  const scheme = enableSSL ? 'https://' : 'http://';\n                  if (deployUrl) {\n                    const url = new URL(`${scheme}${deployUrl}`);\n                    userCfg.api = url.host;\n                    userCfg.clientOrigin = url.origin;\n                  }\n                  if (api) {\n                    userCfg.api = api;\n                  }\n                  if (clientOrigin) {\n                    userCfg.clientOrigin = clientOrigin;\n                  }\n                  if (isDataHarborOpen) {\n                    const caredData: string[] = dataHarborCaredData\n                      ? dataHarborCaredData.split(',')\n                      : ['console', 'network', 'system', 'storage', 'rrweb-event'];\n                    const config = {\n                      maximum: Number(dataHarborMaximum),\n                      caredData: caredData.reduce((acc, cur) => {\n                        acc[cur.trim()] = true;\n                        return acc;\n                      }, {} as Record<string, boolean>)\n                    };\n                    window.$harbor = new window.DataHarborPlugin(config);\n                    window.PageSpy.registerPlugin(window.$harbor);\n                    if (isRrwebOpen) {\n                      window.$rrweb = new window.RRWebPlugin();\n                      window.PageSpy.registerPlugin(window.$rrweb);\n                    }\n                  }\n                  window.$pageSpy = new window.PageSpy(userCfg);\n                },\n                (e) => {\n                  console.warn('[PageSpy Extension] 加载失败: ', e);\n                }\n              );\n            })\n            .catch((e) => {\n              console.warn('[PageSpy Extension] 加载失败: ', e);\n            });\n        },\n        args: [src, result.pagespy, pluginSrcs]\n      });\n    } else {\n      chrome.action.setBadgeText({\n        tabId: details.tabId,\n        text: ''\n      });\n    }\n  });\n});\n"],"names":["src","config","pluginSrcs"],"mappings":"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"}